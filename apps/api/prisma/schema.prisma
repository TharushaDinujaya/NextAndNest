generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id       Int    @id @default(autoincrement())
  text     String
  authorid Int
  postid   Int
  users    users  @relation(fields: [authorid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  posts    posts  @relation(fields: [postid], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model groups {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  usersToGroups usersToGroups[]
}

model posts {
  id       Int        @id @default(autoincrement())
  authorid Int
  title    String     @db.VarChar(255)
  content  String
  comments comments[]
  users    users      @relation(fields: [authorid], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model profileInfo {
  id       Int   @id @default(autoincrement())
  userid   Int   @unique
  metadata Json?
  users    users @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id                 Int             @id @default(autoincrement())
  name               String          @db.VarChar(255)
  email              String          @unique @db.VarChar(255)
  password           String          @db.VarChar(255)
  hashedRefreshToken String?
  role               Role            @default(USER)
  comments           comments[]
  posts              posts[]
  profileInfo        profileInfo?
  usersToGroups      usersToGroups[]
}

model usersToGroups {
  userid  Int
  groupid Int
  groups  groups @relation(fields: [groupid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users   users  @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([userid, groupid])
}

enum Role {
  ADMIN
  EDITOR
  USER
}
